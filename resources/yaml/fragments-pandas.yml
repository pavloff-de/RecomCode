#
# Important! code params should be defined before a code which is using it
#
# mandatory fields for all sections:
# 'recType' - defines a type of a section
# 'recID' - defines the unique id of a section
#           usually defined by progr. language, library name, type, seq. number
#
# mandatory fields for params:
# 'name' - defines a name of a variable which can be set for this param
# 'type' - defines a python type of the variable
# optional fields for params:
# 'group' - used by live template internally
# 'vars' - defines a fixed list of values which can be set for this param
# 'expr' - defines an expression which can be used for searching of variables in a context
#
# mandatory fields for code
# 'code' - contains the code fragment with variables. used to generate a live template
# optional fields for code
# 'keywords' - used for searching fragments by keywords
# 'textkey' - defines a text which will be showed in the recommender panel
# 'parameter' - defines additional/special parameter for this code fragment
#
---
recType: params
recID: py.pd.par.001
group: pandas
name: dataframe
type: DataFrame
vars: dataframe|df|frame
expr: "pyUniqueIterableVariable"
---
recType: params
recID: py.pd.par.002
group: pandas
name: columnNames
type: list|tuple
vars: columnNames|names|columns
expr: "pyUniqueIterableVariable"
---
recType: params
recID: py.pd.par.003
group: pandas
name: i
type: int
expr: "collectionElementName"
replaceable: no
---
recType: params
recID: py.pd.par.004
group: pandas
name: rowIndex
type: int
vars: rowIndex|row|row_index
expr: "collectionElementName"
replaceable: no
---
recType: params
recID: py.pd.par.005
group: pandas
name: columnIndex
type: int
vars: columnIndex|column|column_index
expr: "collectionElementName"
replaceable: no
---
recType: params
recID: py.pd.par.006
group: pandas
name: columnName
type: int
vars: columnName|column|column_name
expr: "collectionElementName"
replaceable: no
---
recType: code
recID: py.pd.rw.001
group: pandas
keywords: [select, row, position, number]
textkey:
  - "select|get single rowIndex by position|integer|number"
  - "retrieve row in dataframe"
code: $dataframe$.ix[$rowIndex$]
---
recType: code
recID: py.pd.col.001
group: pandas
keywords: [drop, remove, delete, column]
textkey:
  - "drop|remove|delete|kill|purge columnName from dataframe"
code: "$dataframe2$ = $dataframe$.drop(\"$columnName$\", axis=1)"
parameter:
  - name: dataframe2
    expr: "pyUniqueIterableVariable"
---
recType: code
recID: py.pd.col.002
group: pandas
keywords: [drop, remove, delete, multiple, columns]
textkey:
  - "drop|remove|delete|kill|purge multiple columns from dataframe"
code: $dataframe2$ = $dataframe$.drop([$columnNames$], axis=1)
parameter:
  - name: dataframe2
    expr: "pyUniqueIterableVariable"
---
recType: code
recID: py.pd.col.004
group: pandas
keywords: [rename, columns, list]
textkey:
 - "rename columns in a dataframe via list"
code: $dataframe$.columns = $columnNames$
---
recType: code
recID: py.pd.col.005
parent: py.pd.004
group: pandas
keywords: [rename, columns, dictionary]
textkey:
 - "rename columns in a dataframe via dictionary"
code: |
    $dataframe$ = $dataframe$.rename(columns=$dictionaryOfColumnNames$)
parameter:
  - name: dictionaryOfColumnNames
    vars: "{'oldName1': 'newName1', 'oldName2': 'newName2'}"
---
recType: code
recID: py.pd.col.006
group: pandas
keywords: [select, column, number, position]
textkey:
- "select columnIndex in a dataframe"
code: $dataframe2$ = $dataframe$[$dataframe$.columns[$columnIndex$]]
parameter:
- name: dataframe2
  expr: "pyUniqueIterableVariable"
---
recType: code
recID: py.pd.col.007
group: pandas
keywords: [select, column, columns, name]
textkey:
- "select columns in a dataframe by name"
code: $dataframe2$ = $dataframe$[[$columnNames$]]
parameter:
- name: dataframe2
  expr: "pyUniqueIterableVariable"
---
recType: code
group: pandas
recID: py.pd.df.001
keywords: [iterator, columns, iterate]
textkey:
- "iterate over columns of a dataframe"
code: "for $i$ in $dataframe$.iteritems():\n    $END$"
---
recType: code
group: pandas
recID: py.pd.df.002
keywords: [iterator, rows, iterate]
textkey:
- "iterate over rows of a dataframe"
code: "for $i$ in $dataframe$.iterrows():\n    $END$"
---
recType: code
group: pandas
recID: py.pd.df.003
keywords: [iterator, rows, tuples, namedtuples, iterate]
textkey:
- "iterate over rows as namedtuples"
code: "for $i$ in $dataframe$.itertuples(index=$index$, name=\"$name$\"):\n    $END$"
parameter:
- name: index
  vars: True|False
- name: name
  vars: Pandas
---
recType: code
group: pandas
recID: py.pd.df.004
keywords: [dataframe, dot, product, matrix, multiplication]
textkey:
- "dot product with other dataframe|series object"
- "matrix multiplication with dataframe|Series objects"
code: "$dataframe$.dot($dataframe2$)"
parameter:
- name: dataframe2
  expr: "pyUniqueIterableVariable"
---
recType: code
group: pandas
recID: py.pd.df.005
keywords: [dataframe, transpose, matrix, diagonal]
textkey:
- "transpose index and columns of a dataframe"
- "flip|reflect a matrix over its diagonal"
code: "$dataframe$.transpose()"
---
recType: code
group: pandas
recID: py.pd.df.006
keywords: [read, dataframe, csv, load]
textkey:
- "read dataframe from csv|tsv"
code: "$dataframe$ = $module$.read_csv(\"$path$\", delimiter=\"$sep$\", header=$header$)$END$"
parameter:
- name: path
  vars: ""
- name: sep
  vars: ",|;"
- name: header
  vars: "0|None"
- name: module
  vars: "pandas|pd"