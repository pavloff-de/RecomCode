---
# Record containing description of a fragment group 
recType: group
groupName: pandas
domain: data processing
lang: python
requiredPackages:
 - pandas: 0.20
keywords: [pandas, dataframe, series]


---
# Records with parameter types
recType: params
recID: par.01
group: pandas
name: dataframe
type: DataFrame
names: [dataframe, df, frame]
# type: vars; can be also expressions (expr), examples (exem), ...
parameterType: var
---
recType: params
recID: par.02
group: pandas
name: row-index-num
type: Integer
names: [i, row, position, x]
---
recType: params
recID: par.03
group: pandas
name: columnName
type: String
names: [col, column, columnname, name]
---
recType: params
recID: par.04
group: pandas
name: list_columnNames
# maybe later: introduce sets of types like [string, list<string>]
type: List<String>
names: [col, column, columnname, name, col_list, column_list]
---
recType: params
recID: par.05
group: pandas
name: dictionaryOfColumnNames
# maybe later: introduce sets of types like [string, list<string>]
type: dict<String,String>
names: [dictionary, col2col]
---
recType: code
recID: py.pd.001
parent:
group: pandas
keywords: [row]
related: # optional list of related records, to show more options
textkey:
  - "select|get single row by position|integer|number"
  - "retrieve row in dataframe" # alternative description
code: |
    §dataframe§.ix[§row-index-num§]
parameters: # optional, overwrites settings from default vars
# to synthesize optional comment with used var names
commentTemplate: retrieve row at position §row-index-num§ from dataframe §dataframe§
sources: # optional link to stack-overflow issue (or issues)
documentation: # optional link to documentation
---

recType: code
recID: py.pd.002
parent:
group: pandas
keywords: [column]
textkey:
  - "drop|remove|delete|kill|purge single column from dataframe"
code: |
    §dataframe§.drop(§columnName§, axis =1)
commentTemplate: delete column §columnName§ from dataframe §dataframe§
sources: # optional link to stack-overflow issue
documentation: # optional link to documentation
---
recType: code
recID: py.pd.002.b
parent: py.pd.002
textkey:
  - "drop|remove|delete|kill|purge multiple columns from dataframe"
code: |
    §dataframe§.drop([§list_columnNames§], axis =1)
commentTemplate: delete columns §list_columnNames§ from dataframe §dataframe§
---
recType: code
recID: py.pd.003
parent:
group: pandas
textkey:
  - "rearrange|change order of columns in a dataframe"
code: |
      columnNamesList = §dataframe§.columns.tolist()
      # todo: change order of elements in columnNamesList as desired
      # e.g. swap 1st and last via columnNamesList = columnNamesList[-1:] + columnNamesList[:-1]
      §dataframe§ = §dataframe§[columnNamesList]

commentTemplate: rearrange order of columns in dataframe §dataframe§
sources: ["https://stackoverflow.com/questions/13148429/how-to-change-the-order-of-dataframe-columns"]
documentation:
---
recType: code
recID: py.pd.004
parent:
group: pandas
textkey:
 - "rename columns in a dataframe via list"
code: |
    §dataframe§.columns = §list_columnNames§
commentTemplate: rename columns in the dataframe §dataframe§
sources: https://stackoverflow.com/questions/11346283/renaming-columns-in-pandas
documentation:
---
recType: code
recID: py.pd.004.b
parent: py.pd.004
group: pandas
textkey:
 - "rename columns in a dataframe via dictionary"
code: |
    # todo: setup the dictionary
    §dataframe§ = §dataframe§.rename(columns=§dictionaryOfColumnNames§)
    # df = df.rename(columns={'oldName1': 'newName1', 'oldName2': 'newName2'})
parameters: |
  dictionaryOfColumnNames:
    type: dict
    example: "{'oldName1': 'newName1', 'oldName2': 'newName2'}"