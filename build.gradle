apply plugin: 'java'
apply plugin: 'com.google.protobuf'
// Generate IntelliJ IDEA's .idea & .iml project files
// Don't use - messes up the modules in idea!
// apply plugin: 'idea'

buildscript {
    repositories {
        jcenter()
        maven { // The google mirror is less flaky than mavenCentral()
            url "https://maven-central.storage-download.googleapis.com/repos/central/data/"           
            }
    }
    dependencies { // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5' }
}

repositories {
    jcenter()
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/" }
    mavenLocal()
    maven { // Added by Artur Andrzejak
      url "https://mvnrepository.com/artifact/"             }
}


// IMPORTANT: You probably want the non-SNAPSHOT version of gRPC. Make sure you
// are looking at a tagged version of the example and not "master"!

// Feel free to delete the comment at the next line. It is just for safely
// updating the version in our release process.
def grpcVersion = '1.15.0' // FOUND_GRPC_VERSION
def nettyTcNativeVersion = '2.0.7.Final'
def protobufVersion = '3.5.1'
def protocVersion = '3.5.1-1'

dependencies {
    compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.9.5"
}

// Added by Artur Andrzejak
sourceSets {
    main {
        java {
            srcDir 'src/'
        }
        proto {
            srcDir 'src/proto'
        }
    }
}

// Top level dir (in the project) for the generated code
def genFilesBaseDir = 'src_generated'


protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }

//    generateProtoTasks.generatedFilesBaseDir = 'src'
    generateProtoTasks.generatedFilesBaseDir = "${genFilesBaseDir}"

    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
        // AA: don't know what this does ;-)
        ofSourceSet('main')
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
/*
idea {
    module {
        generatedSourceDirs += file("${genFilesBaseDir}/main/java/")
        generatedSourceDirs += file("${genFilesBaseDir}/main/grpc/")
    }
}
*/


